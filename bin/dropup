#!/usr/bin/env ruby
require 'fileutils'

DROP_UP_DIR = File.expand_path(ENV['DROP_UP_DIR'] || '~/Dropbox/Public/dropup')
OVERWRITE   =  ARGV.delete('--overwrite')
VERBOSE     = !ARGV.delete('--verbose').nil?
COPY        =  ARGV.delete('--symlink').nil?

HELP = <<EOS
dropup copies or symlinks files into your public folder and then gives you the
public url.

If the clipboard gem is installed it'll copy the public url to your clipboard(s).

Files will be stored in: 

  #{DROP_UP_DIR}

This can be changed by setting the DROP_UP_DIR environment variable.
EOS

USAGE = <<EOS
Usage: dropup [options] filename

Options:

  --help     -h  Displays this help
  --no-clip      Doesn't copy the url to the clipboard
  --overwrite    Overwrites target file if it exists
  --symlink      Symlink the file instead of copying it
  --verbose      Displays any notices

#{HELP}
EOS

if ARGV.delete("--help") || ARGV.delete("-h")
  puts USAGE
  exit 1
end

if ARGV.empty?
  puts USAGE
  exit 1
end

def log(msg, verbose=true)
  puts msg unless verbose && !VERBOSE
end

def yes_no(msg, default=true)
  choice = default ? '[Yn]' : '[yN]'

  puts "#{msg} #{choice}"

  input = STDIN.readline
  
  if input.nil? || input.chomp.empty?
    default
  else
    input.downcase.start_with?("y")
  end
end

begin
  require 'rubygems'
  require 'clipboard'
rescue LoadError
  log "Could not load clipboard gem"
end

CLIP = defined?(Clipboard) && ARGV.delete('--no-clip').nil?

file = ARGV.last

unless File.exist?(file)
  puts "Error: File does not exist"
  puts USAGE
  exit 2
end

Dir.mkdir(DROP_UP_DIR) unless Dir.exists?(DROP_UP_DIR)

source = File.realpath(file)

# I like my files to be organised by creation date
date   = Time.now.strftime("%Y-%m-%d")
target = File.join(DROP_UP_DIR, "#{date}_#{File.basename(file)}")

if File.exists?(target)
  overwrite = OVERWRITE || yes_no("Target file already exists, overwrite it?")

  unless overwrite
    puts "Error: Cannot overwrite target file"
    exit 3
  end

  File.delete(target)
end

if COPY
  FileUtils.cp_r(source, target)
else
  File.symlink(source, target)
end

url = `dropbox puburl #{target}`

Clipboard.copy(url) if CLIP

puts url